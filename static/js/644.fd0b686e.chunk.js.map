{"version":3,"file":"static/js/644.fd0b686e.chunk.js","mappings":"+SAEaA,EAAUC,mCAEhB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACCC,EADD,6CAC6CD,EAD7C,oBACgEH,GADhE,kBAGoBK,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,uCAMHC,QAAQC,MAAM,sBAAd,MANG,kBAOI,MAPJ,gFAWA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCN,EADD,mEACmEJ,GADnE,kBAGoBK,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,uCAMHC,QAAQC,MAAM,+BAAd,MANG,kBAOI,MAPJ,gFAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BR,GAA/B,gFACCC,EADD,6CAC6CD,EAD7C,4BACwEH,GADxE,kBAGoBK,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,uCAMHC,QAAQC,MAAM,8BAAd,MANG,kBAOI,MAPJ,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BT,GAA/B,gFACCC,EADD,6CAC6CD,EAD7C,4BACwEH,GADxE,kBAGoBK,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,uCAMHC,QAAQC,MAAM,8BAAd,MANG,kBAOI,MAPJ,gFAWA,IAAMI,EAAY,mCAAG,WAAMC,GAAN,gFACpBV,EADoB,4DACuCJ,EADvC,kBACwDc,GADxD,SAGHT,EAAAA,EAAAA,IAAUD,GAHP,cAGpBE,EAHoB,yBAInBA,EAASC,KAAKQ,SAJK,2CAAH,qD,sBChDlB,SAASC,EAAQC,GAGtB,OAFkBA,EAAWC,MAAM,KACN,EAE9B,C,iMCFYC,EAAaC,EAAAA,GAAAA,IAAH,6Y,SCAR,SAASC,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACpC,OACE,SAACJ,EAAD,WACE,kBACEK,KAAK,SACLF,MAAOA,EACPG,YAAY,qBACZF,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,OAAOL,MAAtB,KAIlB,C,yBCVYM,EAAOR,EAAAA,GAAAA,KAAH,wFAMJS,EAAYT,EAAAA,GAAAA,GAAH,0EAMTU,EAAgBV,EAAAA,GAAAA,GAAH,gDAIbW,GAAYX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,2JAUTa,EAAab,EAAAA,GAAAA,KAAH,oEAKVc,EAAYd,EAAAA,GAAAA,KAAH,8DC2BtB,MA9CA,WAAmB,IAAD,EAChB,GAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCL,EAAAA,EAAAA,UAAQ,UAC5CI,EAAaE,IAAI,gBAD2B,QACf,IAD/B,eAAOC,EAAP,KAAoBC,EAApB,KAGMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,qGACFlC,EAAAA,EAAAA,IAAa6B,GADX,OAClB3B,EADkB,OAExBsB,EAAUtB,GAFc,2CAAH,qDAIvBgC,GACD,GAAE,CAACL,IAEJ,IAKMM,GAAgBC,EAAAA,EAAAA,UAAQ,WAC5B,OAAOb,EAAOc,QAAO,SAAAC,GAAK,OACxBA,EAAMC,MAAMC,cAAcC,SAASZ,EAAYW,cADvB,GAG3B,GAAE,CAACjB,EAAQM,IAEZ,OACE,UAACd,EAAD,YACE,SAACP,EAAD,CAAMC,MAAOoB,EAAanB,SAbV,SAAAD,GAClBkB,EAA0B,KAAVlB,EAAe,CAAER,MAAOQ,GAAU,CAAC,GACnDqB,EAAerB,EAChB,IAWI0B,EAAcO,OAAS,IACtB,SAAC1B,EAAD,UACGmB,EAAcQ,KAAI,SAAAL,GAAK,OACtB,SAACrB,EAAD,WACE,UAACC,EAAD,CAAW0B,GAAE,kBAAaN,EAAMO,IAAMC,MAAO,CAAEC,KAAMhB,GAArD,WACE,SAACX,EAAD,UAAakB,EAAMC,SACnB,UAAClB,EAAD,gBAAalB,EAAAA,EAAAA,GAAQmC,EAAMU,cAA3B,WAHgBV,EAAMO,GADJ,QAYjC,C","sources":["api/defaultApi.js","assets/getYear.js","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = process.env.REACT_APP_API_KEY;\n\nexport async function getMovieDetails(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie', error);\n    return null;\n  }\n}\n\nexport async function getMoviesTrending() {\n  const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie trending', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie credits', error);\n    return null;\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie reviews', error);\n    return null;\n  }\n}\n\nexport const searchMovies = async query => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n","export function getYear(stringDate) {\n  const dateArray = stringDate.split('-');\n  const firstIndex = dateArray[0];\n  return firstIndex;\n}\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.div`\n  input[type='search'] {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 10px 20px;\n    font-size: 16px;\n    width: 300px;\n    box-sizing: border-box;\n    margin-bottom: 16px;\n    outline: none;\n    /* margin-left: 20px; */\n\n    &:focus {\n      border-color: rgb(45, 88, 13);\n      box-shadow: 0 0 0 0.2rem rgba(45, 88, 13, 0.3);\n    }\n  }\n`;\n","import { StyledForm } from './SearchBox.styled';\n\nexport default function Form({ value, onChange }) {\n  return (\n    <StyledForm>\n      <input\n        type=\"search\"\n        value={value}\n        placeholder=\"Enter a movie here\"\n        onChange={e => onChange(e.target.value)}\n      />\n    </StyledForm>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  /* max-width: 800px; */\n  margin: 0 auto;\n  padding: 50px;\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const MovieListItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  display: flex;\n  align-items: center;\n  &:hover {\n    color: rgb(45, 88, 13);\n  }\n`;\n\nexport const MovieTitle = styled.span`\n  font-weight: bold;\n  margin-right: 5px;\n`;\n\nexport const MovieYear = styled.span`\n  font-size: 0.8rem;\n  color: #666;\n`;\n","import { useEffect, useMemo, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'api/defaultApi';\nimport Form from 'components/SearchBox/SearchBox';\n\nimport { getYear } from 'assets/getYear';\nimport {\n  Main,\n  MovieList,\n  MovieListItem,\n  MovieLink,\n  MovieTitle,\n  MovieYear,\n} from './Movies.styled';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('query') ?? ''\n  );\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchSearchMovies = async () => {\n      const results = await searchMovies(searchQuery);\n      setMovies(results);\n    };\n    fetchSearchMovies();\n  }, [searchQuery]);\n\n  const changeQuery = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n    setSearchQuery(value);\n  };\n\n  const visibleMovies = useMemo(() => {\n    return movies.filter(movie =>\n      movie.title.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  }, [movies, searchQuery]);\n\n  return (\n    <Main>\n      <Form value={searchQuery} onChange={changeQuery} />\n      {visibleMovies.length > 0 && (\n        <MovieList>\n          {visibleMovies.map(movie => (\n            <MovieListItem key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                <MovieTitle>{movie.title}</MovieTitle>\n                <MovieYear>({getYear(movie.release_date)})</MovieYear>\n              </MovieLink>\n            </MovieListItem>\n          ))}\n        </MovieList>\n      )}\n    </Main>\n  );\n}\n\nexport default Movies;\n"],"names":["API_KEY","process","getMovieDetails","movieId","url","axios","response","data","console","error","getMoviesTrending","getMovieCredits","getMovieReviews","searchMovies","query","results","getYear","stringDate","split","StyledForm","styled","Form","value","onChange","type","placeholder","e","target","Main","MovieList","MovieListItem","MovieLink","Link","MovieTitle","MovieYear","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","searchQuery","setSearchQuery","location","useLocation","useEffect","fetchSearchMovies","visibleMovies","useMemo","filter","movie","title","toLowerCase","includes","length","map","to","id","state","from","release_date"],"sourceRoot":""}