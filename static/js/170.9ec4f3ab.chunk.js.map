{"version":3,"file":"static/js/170.9ec4f3ab.chunk.js","mappings":"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","sources":["api/defaultApi.js","assets/getYear.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = process.env.REACT_APP_API_KEY;\n\nexport async function getMovieDetails(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie', error);\n    return null;\n  }\n}\n\nexport async function getMoviesTrending() {\n  const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie trending', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie credits', error);\n    return null;\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie reviews', error);\n    return null;\n  }\n}\n\nexport const searchMovies = async query => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n","export function getYear(stringDate) {\n  const dateArray = stringDate.split('-');\n  const firstIndex = dateArray[0];\n  return firstIndex;\n}\n","import styled from 'styled-components';\n\nexport const MovieContainerCast = styled.div`\n  padding: 10px 50px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledHeading = styled.h2`\n  font-size: 1.5rem;\n  color: #333;\n  text-align: center;\n`;\n\nexport const StyledList = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 1rem;\n  height: 150px;\n  padding-left: 0;\n`;\n\nexport const StyledListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  text-align: left;\n  /* width: 150px; */\n  height: 100%;\n`;\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  height: 200px;\n  /* height: 100%; */\n  object-fit: cover;\n  border-radius: 10%;\n  margin-bottom: 0.5rem;\n`;\n\nexport const StyledTextActor = styled.div`\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledName = styled.span`\n  font-weight: bold;\n  margin-right: 10px;\n`;\n\nexport const StyledRole = styled.span`\n  color: #666;\n`;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieCredits } from 'api/defaultApi';\n\nimport {\n  MovieContainerCast,\n  StyledHeading,\n  StyledImage,\n  StyledList,\n  StyledListItem,\n  StyledName,\n  StyledRole,\n  StyledTextActor,\n} from './Cast.styled';\n\nexport default function Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMoviesCredits = async () => {\n      const credits = await getMovieCredits(movieId);\n      setCast(credits.cast || []);\n    };\n    fetchMoviesCredits();\n  }, [movieId]);\n\n  return (\n    <MovieContainerCast>\n      <StyledHeading>Cast List</StyledHeading>\n      <StyledList>\n        {cast.length > 0 ? (\n          cast.map(({ id, name, character, profile_path }, index) => (\n            <StyledListItem key={`${id}-${index}`}>\n              {profile_path ? (\n                <StyledImage\n                  src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                  alt={`${name}'s profile picture`}\n                />\n              ) : (\n                <StyledImage\n                  src=\"https://via.placeholder.com/200x200.png?text=No+Picture\"\n                  alt=\"No Picture\"\n                />\n              )}\n              <StyledTextActor>\n                <StyledName>{name}</StyledName>\n                <StyledRole>{character}</StyledRole>\n              </StyledTextActor>\n            </StyledListItem>\n          ))\n        ) : (\n          <li key=\"no-cast\">No cast found.</li>\n        )}\n      </StyledList>\n    </MovieContainerCast>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 20px 50px;\n\n  margin-bottom: 20px;\n`;\n\nexport const Poster = styled.img`\n  max-width: 300px;\n  margin-right: 20px;\n  border-radius: 2%;\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  flex: 1;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const GenreList = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const MovieOverview = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const MovieDetailsBox = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const MovieDetail = styled.p`\n  margin-right: 30px;\n`;\n\nexport const StyledLinkMovie = styled(Link)`\n  color: rgb(45, 88, 13);\n  margin: 0 50px;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n\n  flex-direction: column;\n  /* justify-content: flex-start; */\n  margin-left: 50px;\n`;\n\nexport const NavList = styled.ul`\n  list-style: none;\n  display: flex;\n`;\n\nexport const NavItem = styled.li`\n  margin-right: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #333;\n  text-decoration: none;\n\n  &:hover {\n    color: rgb(45, 88, 13);\n    font-size: 16px;\n    font-weight: 500;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { TiArrowBack } from 'react-icons/ti';\n\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\nimport { getMovieDetails } from 'api/defaultApi';\nimport { getYear } from 'assets/getYear';\nimport DEFAULT_POSTER from '../../assets/images/default-movie.jpg';\n\nimport {\n  GenreList,\n  MovieContainer,\n  MovieDetail,\n  MovieDetailsBox,\n  MovieDetailsContainer,\n  MovieOverview,\n  MovieTitle,\n  Nav,\n  NavItem,\n  NavList,\n  Poster,\n  StyledLink,\n  StyledLinkMovie,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [previousPage, setPreviousPage] = useState(null);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const detailsMovie = await getMovieDetails(movieId);\n      setMovie(detailsMovie);\n    };\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  useEffect(() => {\n    setPreviousPage(backLink);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!movie) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <StyledLinkMovie to={previousPage}>\n        {<TiArrowBack size={40} />}\n      </StyledLinkMovie>\n      <MovieContainer>\n        {movie.poster_path !== null ? (\n          <Poster\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n          />\n        ) : (\n          <Poster src={DEFAULT_POSTER} alt=\"default poster\" />\n        )}\n\n        <MovieDetailsContainer>\n          <MovieTitle>\n            {movie.title} ({getYear(movie.release_date)})\n          </MovieTitle>\n\n          <MovieOverview>{movie.overview}</MovieOverview>\n\n          <GenreList>\n            Genres: {movie.genres.map(({ name }) => name).join(', ')}\n          </GenreList>\n          <MovieDetailsBox>\n            <MovieDetail> {movie.runtime} min</MovieDetail>\n            <MovieDetail>\n              {' '}\n              {Math.round(movie.vote_average * 10) / 10} / 10\n            </MovieDetail>\n            <MovieDetail>{movie.release_date}</MovieDetail>\n          </MovieDetailsBox>\n        </MovieDetailsContainer>\n      </MovieContainer>\n      <MovieContainer>\n        <Nav>\n          <NavList>\n            <NavItem>\n              <StyledLink to=\"cast\">Cast</StyledLink>\n            </NavItem>\n            <NavItem>\n              <StyledLink to=\"reviews\">Reviews</StyledLink>\n            </NavItem>\n          </NavList>\n        </Nav>\n      </MovieContainer>\n\n      <Suspense fallback={<div>Loading ...</div>}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n          <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MovieContainerReview = styled.div`\n  padding: 10px 50px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledHeadingReview = styled.h2`\n  font-size: 1.5rem;\n  color: #333;\n`;\n\nexport const StyledListReview = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  height: 150px;\n  padding-left: 0;\n`;\n\nexport const StyledListItemReview = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* align-items: center; */\n  padding: 0.5rem;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  text-align: left;\n  /* width: 150px; */\n  height: 100%;\n`;\n\nexport const StyledNameReview = styled.p`\n  font-weight: bold;\n  margin-right: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getMovieReviews } from 'api/defaultApi';\n\nimport {\n  MovieContainerReview,\n  StyledHeadingReview,\n  StyledListReview,\n  StyledListItemReview,\n  StyledNameReview,\n} from './Reviews.styled';\n\nexport default function Reviews({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      const response = await getMovieReviews(movieId);\n      setReviews(response.results);\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <MovieContainerReview>\n      <StyledHeadingReview>Reviews</StyledHeadingReview>\n      <StyledListReview>\n        {reviews.length > 0 ? (\n          reviews.map(review => (\n            <StyledListItemReview key={review.id}>\n              <StyledNameReview>{review.author}</StyledNameReview>\n              <p>{review.content}</p>\n            </StyledListItemReview>\n          ))\n        ) : (\n          <StyledListItemReview key=\"no-reviews\">\n            No reviews found.\n          </StyledListItemReview>\n        )}\n      </StyledListReview>\n    </MovieContainerReview>\n  );\n}\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["API_KEY","process","getMovieDetails","movieId","url","axios","response","data","console","error","getMoviesTrending","getMovieCredits","getMovieReviews","searchMovies","query","results","getYear","stringDate","split","MovieContainerCast","styled","StyledHeading","StyledList","StyledListItem","StyledImage","StyledTextActor","StyledName","StyledRole","Cast","useState","cast","setCast","useEffect","fetchMoviesCredits","credits","length","map","index","id","name","character","profile_path","src","alt","MovieContainer","Poster","MovieDetailsContainer","MovieTitle","GenreList","MovieOverview","MovieDetailsBox","MovieDetail","StyledLinkMovie","Link","Nav","NavList","NavItem","StyledLink","MovieDetails","useParams","movie","setMovie","previousPage","setPreviousPage","backLink","useLocation","state","from","fetchMovieDetails","detailsMovie","to","size","poster_path","title","DEFAULT_POSTER","release_date","overview","genres","join","runtime","Math","round","vote_average","Suspense","fallback","path","element","Reviews","MovieContainerReview","StyledHeadingReview","StyledListReview","StyledListItemReview","StyledNameReview","reviews","setReviews","fetchMovieReviews","review","author","content"],"sourceRoot":""}